@model DesafioMVC.DTO.SearchDataDTO

@{
    ViewData["Title"] = "Busca detalhada";
}

<h3 class="text-primary">Busca detalhada</h3><br>
<form class="form-horizontal" asp-controller="Home" asp-action="Search" method="POST">
    <div class="row">
        <div class="col-md col-12 mb-md-0 mb-2">
            <label asp-for="CategoryId"><strong>Qual o tipo?</strong></label>
            <select asp-for="CategoryId" class="form-control" asp-items='@(new SelectList(@ViewBag.Categories, "Id", "Name"))'>
                <option value="">Qualquer tipo</option>
            </select>
        </div>
        <div class="col-md col-12 mb-md-0 mb-2">
            <label asp-for="BusinessId"><strong>O que você precisa?</strong></label>
            <select asp-for="BusinessId" class="form-control" asp-items='@(new SelectList(@ViewBag.Businesses, "Id", "Name"))'>
                <option value="">Qualquer negócio</option>
            </select>
        </div>
        <div class="col-md col-12 mb-2">
            <label asp-for="Rooms"><strong>Nº de quartos</strong></label>
            <input type="number" asp-for="Rooms" class="form-control" placeholder="Qualquer quantidade">
        </div>
    </div>
    <div class="row">
        <div class="col-xl-2 col-md-3 col-12 mb-md-0 mb-2">
            <label asp-for="StateId"><strong>Estado</strong></label>
                <select asp-for="StateId" class="form-control" id="state" asp-items='@(new SelectList(@ViewBag.States, "Id", "Uf"))'>
                    <option value="">Qualquer estado</option>
            </select>
        </div>
        <div class="col-xl-5 col-md-4 col-12 mb-md-0 mb-2">
            <label asp-for="CityId"><strong>Município</strong></label>
            <select asp-for="CityId" disabled class="form-control" id="city" asp-items='@(new SelectList(@ViewBag.CitiesByState, "Id", "Name"))'>
                <option value="">Qualquer município</option>
            </select>
        </div>
        <div class="col-md-5 col-12">
            <label asp-for="DistrictId"><strong>Bairro</strong></label>
            <select asp-for="DistrictId" disabled class="form-control" id="district" asp-items='@(new SelectList(@ViewBag.DistrictsByCity, "Id", "Name"))'>
                <option value="">Qualquer bairro</option>
            </select>
        </div>
    </div><br>
    <div class="row">
        <div class="col text-right">
            <button class="btn btn-outline-primary text-right">Buscar</button>
        </div>
    </div>
</form>
<hr>
<div class="container-fluid">
    <div class="row">
        @foreach (var property in ViewBag.Properties) {
            <div class="col-xl-4 col-md-6 col-12">
                <div class="card border-primary mb-3">
                    <a href="/Home/Property/@property.Id"><img src="~/PropImages/@property.Images[0]" class="card-img-top" alt="imagem" style="height: 210px;"></a>
                    <div class="card-body">
                        <div class="row">
                            <h4 class="col card-title"><a class="text-primary" href="/Home/Property/@property.Id" style="text-decoration: none;">@property.District.City.Name</a></h4>
                            <h4 class="col card-title text-right">@property.District.City.State.Uf</h4>
                        </div>
                        <p class="card-text">@property.District.Name</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    const citySelect = document.getElementById("city")
    const districtSelect = document.getElementById("district")

    function citiesFetch() {
        const stateSelect = document.getElementById("state")

        if (stateSelect.value !== "") {
            citySelect.removeAttribute("disabled")
        }

        stateSelect.addEventListener("change", async event => {
            const stateId = event.target.value

            if (stateId === "") {
                citySelect.setAttribute("disabled", undefined)
                districtSelect.setAttribute("disabled", undefined)
            } else {
                citySelect.removeAttribute("disabled")
            }

            const res = await fetch(`https://localhost:5001/Cities/CitiesByState/${stateId}`)
            const cities = await res.json()

            const districtSelectOption = '<option value="">Qualquer bairro</option>'
            let citySelectOptions = '<option value="">Qualquer município</option>'
            cities.forEach(city => {
                let option = `<option value="${city.id}">${city.name}</option>`
                citySelectOptions = citySelectOptions.concat(option)
            })

            citySelect.innerHTML = citySelectOptions
            districtSelect.innerHTML = districtSelectOption
        })
    }

    function districtsFetch() {
        if (citySelect.value !== "") {
            districtSelect.removeAttribute("disabled")
        }

        citySelect.addEventListener("change", async event => {
            const cityId = event.target.value

            if (cityId === "") {
                districtSelect.setAttribute("disabled", undefined)
            } else {
                districtSelect.removeAttribute("disabled")
            }

            const res = await fetch(`https://localhost:5001/Districts/DistrictsByState/${cityId}`)
            const districts = await res.json()

            let districtSelectOptions = '<option value="">Qualquer bairro</option>'
            districts.forEach(district => {
                let option = `<option value="${district.id}">${district.name}</option>`
                districtSelectOptions = districtSelectOptions.concat(option)
            })

            districtSelect.innerHTML = districtSelectOptions
        })
    }

    citiesFetch()
    districtsFetch()
</script>